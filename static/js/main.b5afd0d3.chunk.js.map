{"version":3,"sources":["ChooseGame.tsx","PlayWithComputer.tsx","CheckWhoWon.tsx","DetermineGameOver.tsx","DisplayBoard.tsx","PlayWithFriend/PlayWithFriend.tsx","Game.tsx","App.tsx","index.tsx"],"names":["ChooseGame","setIsChosenGame","setPlayWithFriend","className","onClick","PlayWithComputer","CheckWhoWon","xWon","oWon","tie","emptyBoard","DetermineGameOver","board","setOWon","setXWon","setTie","vert1","vert2","vert3","diag1","diag2","reducerAdd","previousValue","currentValue","reduce","i","length","hor","reducer","flat","DisplayBoard","makeMove","xMoves","boardJSX","j","push","width","height","viewBox","fill","xmlns","cx","cy","r","stroke","x1","y1","x2","y2","map","symbol","PlayWithFriend","useState","setBoard","setXMoves","useEffect","d","copy","Game","isChosenGame","playWithFriend","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5afd0d3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface ChooseGameProps {\r\n  setIsChosenGame: (active: boolean) => void;\r\n  setPlayWithFriend: (active: boolean) => void;\r\n}\r\n\r\nconst ChooseGame = ({\r\n  setIsChosenGame,\r\n  setPlayWithFriend,\r\n}: ChooseGameProps) => {\r\n  return (\r\n    <>\r\n      <h1 className=\"text-center text-7xl mb-24  py-8\">Крестики-нолики</h1>\r\n      <div className=\"choose justify-end\">\r\n        <h2 className=\"text-center text-4xl py-8\">С кем вы хотите играть?</h2>\r\n        <div className=\"buttons text-center text-3xl \">\r\n          <button\r\n            className=\"button px-9 py-4 text-3xl mt-12 text-white mr-5\"\r\n            onClick={() => {\r\n              setIsChosenGame(true);\r\n              setPlayWithFriend(true);\r\n            }}\r\n          >\r\n            с другом\r\n          </button>\r\n          <button\r\n            className=\"button px-9 py-4 text-3xl mt-12 text-white\"\r\n            onClick={() => {\r\n              setIsChosenGame(true);\r\n            }}\r\n          >\r\n            с компьютером\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChooseGame;\r\n","import React from \"react\";\r\n\r\nconst PlayWithComputer = () => {\r\n  return (\r\n    <div>\r\n      <h2>With Computer</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayWithComputer;\r\n","import React from \"react\";\r\n\r\nconst CheckWhoWon = (\r\n  xWon: boolean,\r\n  oWon: boolean,\r\n  tie: boolean,\r\n  emptyBoard: () => void\r\n) => {\r\n  if (xWon) {\r\n    return (\r\n      <>\r\n        <p className=\"text-5xl lowercase mt-7 max-w-lg\">Крестики победили</p>\r\n        <button\r\n          className=\"button px-9 py-4 text-3xl mt-12 text-white\"\r\n          onClick={() => emptyBoard()}\r\n        >\r\n          Заново\r\n        </button>\r\n      </>\r\n    );\r\n  } else if (oWon) {\r\n    return (\r\n      <>\r\n        <p className=\"text-5xl lowercase mt-7\">Нолики победили</p>\r\n        <button\r\n          className=\"button px-9 py-4 text-3xl mt-12 text-white\"\r\n          onClick={() => emptyBoard()}\r\n        >\r\n          Заново\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n  if (!xWon && !oWon && tie) {\r\n    return (\r\n      <>\r\n        <p className=\"text-5xl lowercase mt-7\">Ничья</p>\r\n        <button\r\n          className=\"button px-9 py-4 text-3xl mt-12 text-white\"\r\n          onClick={() => emptyBoard()}\r\n        >\r\n          Заново\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CheckWhoWon;\r\n","const DetermineGameOver = (\r\n  board: number[][],\r\n  setOWon: (active: boolean) => void,\r\n  setXWon: (active: boolean) => void,\r\n  setTie: (active: boolean) => void\r\n) => {\r\n  let vert1 = [board[0][0], board[1][0], board[2][0]];\r\n  let vert2 = [board[0][1], board[1][1], board[2][1]];\r\n  let vert3 = [board[0][2], board[1][2], board[2][2]];\r\n  let diag1 = [board[0][0], board[1][1], board[2][2]];\r\n  let diag2 = [board[0][2], board[1][1], board[2][0]];\r\n  const reducerAdd = (previousValue: number, currentValue: number) =>\r\n    previousValue + currentValue;\r\n  const reducerMult = (previousValue: number, currentValue: number) =>\r\n    previousValue * currentValue;\r\n  if (\r\n    vert1.reduce(reducerAdd) === -3 ||\r\n    vert2.reduce(reducerAdd) === -3 ||\r\n    vert3.reduce(reducerAdd) === -3 ||\r\n    diag1.reduce(reducerAdd) === -3 ||\r\n    diag2.reduce(reducerAdd) === -3\r\n  ) {\r\n    setOWon(true);\r\n  } else if (\r\n    vert1.reduce(reducerAdd) === 3 ||\r\n    vert2.reduce(reducerAdd) === 3 ||\r\n    vert3.reduce(reducerAdd) === 3 ||\r\n    diag1.reduce(reducerAdd) === 3 ||\r\n    diag2.reduce(reducerAdd) === 3\r\n  ) {\r\n    setXWon(true);\r\n  }\r\n\r\n  for (var i = 0; i < board.length; i++) {\r\n    const hor = board[i];\r\n    const reducer = (previousValue: number, currentValue: number) =>\r\n      previousValue + currentValue;\r\n    if (hor.reduce(reducer) === -3) {\r\n      setOWon(true);\r\n    } else if (hor.reduce(reducer) === 3) {\r\n      setXWon(true);\r\n    }\r\n  }\r\n\r\n  if (board.flat().reduce(reducerMult) !== 0) {\r\n    setTie(true);\r\n  }\r\n};\r\n\r\nexport default DetermineGameOver;\r\n","import React from \"react\";\r\n\r\nconst DisplayBoard = (\r\n  board: number[][],\r\n  makeMove: (i: number, j: number) => void,\r\n  xMoves: boolean,\r\n  xWon: boolean,\r\n  oWon: boolean\r\n) => {\r\n  var boardJSX = [];\r\n  for (let i = 0; i < board.length; i++) {\r\n    for (let j = 0; j < board[i].length; j++) {\r\n      if (board[i][j] === -1) {\r\n        boardJSX.push(\r\n          <button className=\"w-1/3 h-1/3 flex justify-center items-center border-2 cursor-default\">\r\n            <svg\r\n              width=\"70%\"\r\n              height=\"70%\"\r\n              viewBox=\"0 0 221 221\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <circle\r\n                cx=\"110.5\"\r\n                cy=\"110.5\"\r\n                r=\"97.5\"\r\n                fill=\"transparent\"\r\n                stroke=\"#FA4D56\"\r\n                stroke-width=\"26\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        );\r\n      } else if (board[i][j] === 1) {\r\n        boardJSX.push(\r\n          <button className=\"w-1/3 h-1/3 flex justify-center items-center border-2 cursor-default\">\r\n            <svg\r\n              width=\"70%\"\r\n              height=\"70%\"\r\n              viewBox=\"0 0 222 222\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <line\r\n                x1=\"9.19239\"\r\n                y1=\"9.80761\"\r\n                x2=\"212.192\"\r\n                y2=\"212.808\"\r\n                stroke=\"#0F62FE\"\r\n                stroke-width=\"26\"\r\n              />\r\n              <line\r\n                x1=\"212.192\"\r\n                y1=\"9.19239\"\r\n                x2=\"9.19239\"\r\n                y2=\"212.192\"\r\n                stroke=\"#0F62FE\"\r\n                stroke-width=\"26\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        );\r\n      } else {\r\n        boardJSX.push(\r\n          <button\r\n            className={`${\r\n              !xWon && !oWon ? \"hover\" : \"hide\"\r\n            } w-1/3 h-1/3 flex justify-center items-center border-2`}\r\n            onClick={() => makeMove(i, j)}\r\n          >\r\n            {xMoves && (\r\n              <svg\r\n                width=\"70%\"\r\n                height=\"70%\"\r\n                viewBox=\"0 0 222 222\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <line\r\n                  x1=\"9.19239\"\r\n                  y1=\"9.80761\"\r\n                  x2=\"212.192\"\r\n                  y2=\"212.808\"\r\n                  stroke=\"#A6C8FF\"\r\n                  stroke-width=\"26\"\r\n                />\r\n                <line\r\n                  x1=\"212.192\"\r\n                  y1=\"9.19239\"\r\n                  x2=\"9.19239\"\r\n                  y2=\"212.192\"\r\n                  stroke=\"#A6C8FF\"\r\n                  stroke-width=\"26\"\r\n                />\r\n              </svg>\r\n            )}\r\n            {!xMoves && (\r\n              <svg\r\n                width=\"70%\"\r\n                height=\"70%\"\r\n                viewBox=\"0 0 221 221\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <circle\r\n                  cx=\"110.5\"\r\n                  cy=\"110.5\"\r\n                  r=\"97.5\"\r\n                  fill=\"transparent\"\r\n                  stroke=\"#FFB3B8\"\r\n                  stroke-width=\"26\"\r\n                />\r\n              </svg>\r\n            )}\r\n          </button>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  return boardJSX.map((symbol) => symbol);\r\n};\r\n\r\nexport default DisplayBoard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport CheckWhoWon from \"../CheckWhoWon\";\r\nimport DetermineGameOver from \"../DetermineGameOver\";\r\nimport DisplayBoard from \"../DisplayBoard\";\r\n\r\ninterface Props {\r\n  setIsChosenGame: (active: boolean) => void;\r\n  setPlayWithFriend: (active: boolean) => void;\r\n}\r\n\r\nconst PlayWithFriend = ({ setIsChosenGame, setPlayWithFriend }: Props) => {\r\n  const [board, setBoard] = useState([\r\n    [0, 0, 0],\r\n    [0, 0, 0],\r\n    [0, 0, 0],\r\n  ]);\r\n  const [xMoves, setXMoves] = useState(true);\r\n  const [oWon, setOWon] = useState(false);\r\n  const [xWon, setXWon] = useState(false);\r\n  const [tie, setTie] = useState(false);\r\n\r\n  const makeMove = (i: number, j: number) => {\r\n    if (!xWon && !oWon) {\r\n      let copy = [...board];\r\n      if (xMoves) {\r\n        copy[i][j] = 1;\r\n        setBoard(copy);\r\n        setXMoves(false);\r\n      } else {\r\n        copy[i][j] = -1;\r\n        setBoard(copy);\r\n        setXMoves(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const emptyBoard = () => {\r\n    setBoard([\r\n      [0, 0, 0],\r\n      [0, 0, 0],\r\n      [0, 0, 0],\r\n    ]);\r\n    setOWon(false);\r\n    setXWon(false);\r\n    setTie(false);\r\n    setXMoves(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    DetermineGameOver(board, setOWon, setXWon, setTie);\r\n  }, [board]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"top-row flex w-2/4 justify-between\">\r\n        <button\r\n          className=\" justify-start\"\r\n          onClick={() => {\r\n            setIsChosenGame(false);\r\n            setPlayWithFriend(false);\r\n          }}\r\n        >\r\n          <svg\r\n            width=\"50\"\r\n            height=\"50\"\r\n            viewBox=\"0 0 32 24\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              d=\"M0.939338 10.9393C0.353552 11.5251 0.353551 12.4749 0.939338 13.0607L10.4853 22.6066C11.0711 23.1924 12.0208 23.1924 12.6066 22.6066C13.1924 22.0208 13.1924 21.0711 12.6066 20.4853L4.12132 12L12.6066 3.51472C13.1924 2.92893 13.1924 1.97918 12.6066 1.3934C12.0208 0.80761 11.0711 0.80761 10.4853 1.3934L0.939338 10.9393ZM32 10.5L2 10.5L2 13.5L32 13.5L32 10.5Z\"\r\n              fill=\"#8A3FFC\"\r\n            />\r\n          </svg>\r\n        </button>\r\n        <h2 className=\"text-right pt-8 text-xl w-96\">\r\n          Ходите по очереди с другом. Первыми ходят крестики. Удачи!\r\n        </h2>\r\n      </div>\r\n      <div className=\"board w-2/4 max-h-screen flex flex-wrap mx-36 items-center border-2 m-7\">\r\n        {DisplayBoard(board, makeMove, xMoves, xWon, oWon)}\r\n      </div>\r\n      <div className=\"results text-center\">\r\n        {CheckWhoWon(xWon, oWon, tie, emptyBoard)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlayWithFriend;\r\n","import React, { useState } from \"react\";\r\nimport ChooseGame from \"./ChooseGame\";\r\nimport PlayWithComputer from \"./PlayWithComputer\";\r\nimport PlayWithFriend from \"./PlayWithFriend/PlayWithFriend\";\r\n\r\nconst Game = () => {\r\n  const [isChosenGame, setIsChosenGame] = useState(false);\r\n  const [playWithFriend, setPlayWithFriend] = useState(false);\r\n  return (\r\n    <div className=\"wrapper flex h-screen\">\r\n      <div className=\"board-wrapper items-center flex flex-col h-2/3 w-2/3 mx-auto my-10 pb-6\">\r\n        {!isChosenGame && (\r\n          <ChooseGame\r\n            setIsChosenGame={setIsChosenGame}\r\n            setPlayWithFriend={setPlayWithFriend}\r\n          />\r\n        )}\r\n        {isChosenGame && playWithFriend && (\r\n          <PlayWithFriend\r\n            setIsChosenGame={setIsChosenGame}\r\n            setPlayWithFriend={setPlayWithFriend}\r\n          />\r\n        )}\r\n        {isChosenGame && !playWithFriend && <PlayWithComputer />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React from \"react\";\nimport Game from \"./Game\";\nimport \"./styles/style.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}